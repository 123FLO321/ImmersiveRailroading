import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.lib.ObjectId;
import org.apache.commons.io.FileUtils;

buildscript {
    repositories {
        jcenter()
        maven { url = "http://localhost:8000/" }
    }
	dependencies {
        classpath 'cam72cam.universalmodcore:UniversalModCoreGradle:0.1.0'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:4.4.1.201607150455-r'
        classpath 'org.apache.commons:commons-io:1.3.2'
	}
}

apply plugin: 'cam72cam.universalmodcore'

universalmodcore {
    modPackage = 'cam72cam.immersiverailroading'
    modClass = 'ImmersiveRailroading'
    modName = 'Immersive Railroading'
    modId = 'immersiverailroading'
    modVersion = '1.7.3'
    umcVersion = '0.1.0'
    umcJar = '../UniversalModCore/build/libs/UniversalModCore-0.1.0-1.12.2-forge.jar'
}

task ('umcIntegration') {
    doLast {
        if (project.gradle.startParameter.taskNames.contains("umc")) {
            System.out.println("Clone ImmersiveRailroadingIntegration")

            File integrationDir = new File("./ImmersiveRailroadingIntegration")
            String umcLoader = System.getProperty("umc.loader")
            String useSSH = System.getProperty("ssh.http")

            if (umcLoader != null && umcLoader.length() > 0) {
                String uri = ("yes".equals(useSSH) ? "https://github.com/" : "git@github.com:") + "TeamOpenIndustry/ImmersiveRailroadingIntegration.git"

                if (integrationDir.exists()) {
                    System.out.println("Removing " + integrationDir)
                    FileUtils.deleteDirectory(integrationDir)
                }

                integrationDir.mkdirs()

                System.out.println("Cloning " + uri + " into " + integrationDir)


                Git.cloneRepository()
                    .setDirectory(integrationDir)
                    .setURI(uri)
                    .setNoCheckout(true)
                    .setCloneAllBranches(true)
                    .call()
                    .checkout()
                    .setCreateBranch(true)
                    .setName(umcLoader)
                    .setStartPoint("origin/" + umcLoader)
                    .call()

                apply from: 'ImmersiveRailroadingIntegration/setup.gradle'
            }
        }
    }
}

umc.finalizedBy umcIntegration

if ((new File('umc.gradle')).exists()) {
    apply from: 'umc.gradle'
    apply from: 'ImmersiveRailroadingIntegration/dependencies.gradle'
}

